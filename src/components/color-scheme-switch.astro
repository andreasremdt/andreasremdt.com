<div class="flex items-center gap-x-2">
  <svg
    aria-hidden="true"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="h-5 w-5"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
    ></path>
  </svg>

  <button
    type="button"
    role="switch"
    aria-checked="false"
    class="relative inline-flex h-5 w-10 cursor-pointer items-center rounded-full border-2 border-slate-900 bg-transparent transition-colors duration-200 ease-in-out focus:outline-none focus-visible:ring-2 focus-visible:ring-emerald-400 focus-visible:ring-offset-2 dark:border-white"
    data-switch
  >
    <span class="sr-only" data-text>Enable dark mode</span>

    <span
      class="pointer-events-none relative inline-flex h-3 w-3 translate-x-1 transform items-center justify-center rounded-full bg-slate-900 shadow-lg transition duration-200 ease-in-out before:absolute before:h-1 before:w-1 before:rounded-full before:bg-white dark:bg-white dark:before:bg-slate-800"
      data-knob
      aria-hidden="true"></span>
  </button>

  <svg
    aria-hidden="true"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="color-slate-900 h-5 w-5"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
    ></path>
  </svg>
</div>

<script>
  const button = document.querySelector(
    "button[data-switch]"
  ) as HTMLButtonElement;
  const knob = button.querySelector("span[data-knob]") as HTMLSpanElement;
  const text = button.querySelector("span[data-text") as HTMLSpanElement;
  const media = window.matchMedia("(prefers-color-scheme: dark)");

  function handleColorSchemeSwitch() {
    if (button.getAttribute("aria-checked") === "true") {
      disable();
    } else {
      enable();
    }
  }

  function handleMediaChange(event: MediaQueryListEvent) {
    if (event.matches) {
      enable();
    } else {
      disable();
    }
  }

  function handleLoad() {
    if (
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) && media.matches)
    ) {
      enable();
    } else {
      disable();
    }
  }

  function enable() {
    button.setAttribute("aria-checked", "true");
    text.textContent = "Disable dark mode";
    knob.classList.replace("translate-x-1", "translate-x-5");
    document.documentElement.classList.add("dark");
    localStorage.setItem("theme", "dark");
  }

  function disable() {
    button.setAttribute("aria-checked", "false");
    text.textContent = "Enable dark mode";
    knob.classList.replace("translate-x-5", "translate-x-1");
    document.documentElement.classList.remove("dark");
    localStorage.setItem("theme", "light");
  }

  handleLoad();

  media.addEventListener("change", handleMediaChange);
  button.addEventListener("click", handleColorSchemeSwitch);
</script>
